#Использовать notify

Перем ПроцессорыКоллекцийСлужебный;

Функция ИзКоллекции(Коллекция) Экспорт
	ПроцессорКоллекций = Новый ПроцессорКоллекций();
	ПроцессорКоллекций.УстановитьКоллекцию(Коллекция);

	Возврат ПроцессорКоллекций;
КонецФункции

Функция ИзСтроки(Строка, РазделительСтрок = Неопределено, ВключатьПустые = Истина) Экспорт

	Если РазделительСтрок = Неопределено Тогда
		Коллекция = Новый Массив;
		ДлинаСтроки = СтрДлина(Строка);
		Для сч = 1 По ДлинаСтроки Цикл
			Коллекция.Добавить(Сред(Строка, сч, 1));
		КонецЦикла;
	Иначе
		Коллекция = СтрРазделить(Строка, РазделительСтрок, ВключатьПустые);
	КонецЕсли;

	ПроцессорКоллекций = Новый ПроцессорКоллекций();
	ПроцессорКоллекций.УстановитьКоллекцию(Коллекция);
	
	Возврат ПроцессорКоллекций;
	
КонецФункции

Функция СтандартнаяФункцияСравнения() Экспорт
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Элемент1");
	ДополнительныеПараметры.Вставить("Элемент2");
	
	ФункцияСравнения = ОписанияОповещений.Создать("ФункцияСравнения", ПроцессорыКоллекцийСлужебный, ДополнительныеПараметры);
	Возврат ФункцияСравнения;
КонецФункции

Функция СтандартныйОбработчик_Сообщить() Экспорт
	ФункцияОбработки = ОписанияОповещений.Создать("Обработка_Сообщить", ПроцессорыКоллекцийСлужебный);
	Возврат ФункцияОбработки;
КонецФункции

ПутьКСценарию_ПроцессорыКоллекцийСлужебный = ОбъединитьПути(ТекущийСценарий().Каталог, "ПроцессорыКоллекцийСлужебный.os");
ПроцессорыКоллекцийСлужебный = ЗагрузитьСценарий(ПутьКСценарию_ПроцессорыКоллекцийСлужебный);
